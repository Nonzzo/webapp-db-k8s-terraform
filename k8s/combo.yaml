apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-db
  labels:
    app: web-db
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-db
  template:
    metadata:
      labels:
        app: web-db
    spec:
      containers:
      - name: web-db
        image: nonzzo/django-k8s:v4 # {{ .Values.image.repository}}:{{ .Values.image.tag}}
        envFrom:
        - secretRef:
            name: django-k8s-web
        env:
        - name: PORT
          value: "8000"
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: web-db
  namespace: default
spec:
  selector:
    app: web-db
  type: LoadBalancer
  
  ports:
  - name: web-db
    protocol: TCP
    port: 80
    targetPort: 8000


# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: dockerdc
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mysecretpassword

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: LoadBalancer
  ports:
   - port: 5432
  selector:
   app: postgres
   